import telebot
from telebot import types
import sqlite3
import time  # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å time
from datetime import datetime, timedelta  # –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∫–æ–¥–µ

check_mess_already_send = False
check_user_id = None
last_sent_message = None
humanCount = None
needText = None
last_message_id = None  
error_reported = False  # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –±—ã–ª–∞ –ª–∏ –æ—à–∏–±–∫–∞ —É–∂–µ –≤—ã–≤–µ–¥–µ–Ω–∞
user_last_message_ids = {}
user_message_ids = {}
user_chat_ids = {}
data_called = False  
user_id_mess = None

callbackGetData= None

def testMethod(botId):
    global check_mess_already_send
    global check_user_id
    global last_sent_message
    global humanCount
    global needText
    global last_message_id
    global error_reported
    global user_last_message_ids
    global user_message_ids
    global user_chat_ids
    global data_called
    global user_id_mess

    bot = telebot.TeleBot(botId)

    data_called = False
    conn5 = sqlite3.connect('peoplebase.sql')
    cur5 = conn5.cursor()
    cur5.execute("SELECT botChatId FROM users")
    results = cur5.fetchall()
    conn = sqlite3.connect('applicationbase.sql')
    cur = conn.cursor()

    try:
        cur.execute("SELECT * FROM orders ORDER BY id DESC LIMIT 1")
        users = cur.fetchone()
        if users is not None and users[2]:
            if (int(users[3]) <= 1) or (int(users[3]) >= 5):
                humanCount = '—á–µ–ª–æ–≤–µ–∫'
            else:
                humanCount = '—á–µ–ª–æ–≤–µ–∫–∞'
            if int(users[3]) > 1:
                needText = '–ù—É–∂–Ω–æ'
            else:
                needText = '–ù—É–∂–µ–Ω'

            # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞
            order_id = users[0]

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –≤–∫–ª—é—á–µ–Ω–∏–µ–º order_id –≤ callback_data
            markup2 = types.InlineKeyboardMarkup()
            if int(users[3]) == 1:
                callbackGetData = f'–ï–¥—É 1|{order_id}'
                btn12 = types.InlineKeyboardButton('–ï–¥—É 1', callback_data=callbackGetData, one_time_keyboard=True)
                btn52 = types.InlineKeyboardButton('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='https://t.me/Grouli123', one_time_keyboard=True)
                markup2.row(btn12)
                markup2.row(btn52)
            elif int(users[3]) == 2:
                callbackGetData1 = f'–ï–¥—É 1|{order_id}'
                callbackGetData2 = f'–ï–¥–µ–º –≤ 2|{order_id}'
                btn12 = types.InlineKeyboardButton('–ï–¥—É 1', callback_data=callbackGetData1, one_time_keyboard=True)
                btn22 = types.InlineKeyboardButton('–ï–¥–µ–º –≤ 2', callback_data=callbackGetData2, one_time_keyboard=True)
                btn52 = types.InlineKeyboardButton('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='https://t.me/Grouli123', one_time_keyboard=True)
                markup2.row(btn12)
                markup2.row(btn22)
                markup2.row(btn52)
            elif int(users[3]) == 3:
                callbackGetData1 = f'–ï–¥—É 1|{order_id}'
                callbackGetData2 = f'–ï–¥–µ–º –≤ 2|{order_id}'
                callbackGetData3 = f'–ï–¥–µ–º –≤ 3|{order_id}'
                btn12 = types.InlineKeyboardButton('–ï–¥—É 1', callback_data=callbackGetData1, one_time_keyboard=True)
                btn22 = types.InlineKeyboardButton('–ï–¥–µ–º –≤ 2', callback_data=callbackGetData2, one_time_keyboard=True)
                btn32 = types.InlineKeyboardButton('–ï–¥–µ–º –≤ 3', callback_data=callbackGetData3, one_time_keyboard=True)
                btn52 = types.InlineKeyboardButton('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='https://t.me/Grouli123', one_time_keyboard=True)
                markup2.row(btn12)
                markup2.row(btn22)
                markup2.row(btn32)
                markup2.row(btn52)
            elif int(users[3]) >= 4:
                callbackGetData1 = f'–ï–¥—É 1|{order_id}'
                callbackGetData2 = f'–ï–¥–µ–º –≤ 2|{order_id}'
                callbackGetData3 = f'–ï–¥–µ–º –≤ 3|{order_id}'
                callbackGetData4 = f'–ï–¥–µ–º –≤ 4|{order_id}'
                btn12 = types.InlineKeyboardButton('–ï–¥—É 1', callback_data=callbackGetData1, one_time_keyboard=True)
                btn22 = types.InlineKeyboardButton('–ï–¥–µ–º –≤ 2', callback_data=callbackGetData2, one_time_keyboard=True)
                btn32 = types.InlineKeyboardButton('–ï–¥–µ–º –≤ 3', callback_data=callbackGetData3, one_time_keyboard=True)
                btn42 = types.InlineKeyboardButton('–ï–¥–µ–º –≤ 4', callback_data=callbackGetData4, one_time_keyboard=True)
                btn52 = types.InlineKeyboardButton('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='https://t.me/Grouli123', one_time_keyboard=True)
                markup2.row(btn12)
                markup2.row(btn22)
                markup2.row(btn32)
                markup2.row(btn42)
                markup2.row(btn52)

            order_info = (f'‚úÖ\n<b>‚Ä¢{users[2]}: </b>{needText} {users[3]} {humanCount}\n'
                          f'<b>‚Ä¢–ê–¥—Ä–µ—Å:</b>üëâ {users[4]}\n'
                          f'<b>‚Ä¢–ß—Ç–æ –¥–µ–ª–∞—Ç—å:</b> {users[5]}\n'
                          f'<b>‚Ä¢–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç:</b> –≤ {users[6]}:00\n'
                          f'<b>‚Ä¢–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:</b> {users[17]}:00\n'
                          f'<b>‚Ä¢–í–∞–º –Ω–∞ —Ä—É–∫–∏:</b> <u>{users[8]}.00</u> —Ä./—á–∞—Å, –º–∏–Ω–∏–º–∞–ª–∫–∞ 2 —á–∞—Å–∞\n'
                          f'<b>‚Ä¢–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã–º</b>')

            if order_info != last_sent_message:
                user_id_mess = users[0]
                cur.execute("SELECT orderMessageId FROM orders WHERE id = ?", (user_id_mess,))
                current_message_ids_str = cur.fetchone()[0]
                current_message_ids = current_message_ids_str.split(',') if current_message_ids_str else []

                # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ 1 —Ä–∞–∑ –≤ –∫–∞–∂–¥—ã–π —á–∞—Ç
                for result in results:
                    botChatIdw = result[0]
                    if botChatIdw != 'None':
                        try:
                            if str(botChatIdw) not in user_chat_ids.get(user_id_mess, "").split(","):
                                sent_message = bot.send_message(botChatIdw, order_info, reply_markup=markup2, parse_mode='html')
                                last_message_id = sent_message.message_id

                                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
                                user_chat_id_str = user_chat_ids.get(user_id_mess, "")
                                if user_chat_id_str:
                                    user_chat_id_str += ","
                                user_chat_id_str += str(botChatIdw)
                                user_chat_ids[user_id_mess] = user_chat_id_str

                                user_message_id_list = user_message_ids.get(user_id_mess, [])
                                user_message_id_list.append(last_message_id)
                                user_message_ids[user_id_mess] = user_message_id_list

                                last_message_id_str = str(last_message_id)
                                current_message_ids.append(last_message_id_str)
                                updated_message_ids_str = ','.join(current_message_ids)

                        except telebot.apihelper.ApiException as e:
                            if "chat not found" in str(e):
                                print(f"–ß–∞—Ç {botChatIdw} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É.")
                            else:
                                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {botChatIdw}: {e}")

                # –¢–µ–ø–µ—Ä—å –º—ã –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
                cur5.close()
                conn5.close()

                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                for user_id_mess, message_id_list in user_message_ids.items():
                    updated_message_ids_str = ','.join(map(str, message_id_list))
                    print(f'updated_message_ids_str {updated_message_ids_str}')
                    print(f'user_chat_ids[user_id_mess] {user_chat_ids[user_id_mess]}')
                    sql_query = "UPDATE orders SET orderMessageId = ?, orderChatId = ? WHERE id = ?"
                    cur.execute(sql_query, (updated_message_ids_str, user_chat_ids[user_id_mess], user_id_mess))
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
                conn.commit()

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
                last_sent_message = order_info
                check_mess_already_send = False
            else:
                print('–ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π')
                print(user_last_message_ids)
        else:
            print('–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç, –Ω–æ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç')
        cur.close()
        conn.close()
        time.sleep(3)
    except sqlite3.Error as e:
        if not error_reported:
            print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
            error_reported = True
        conn.close()

